#include <iostream>
#include <vector>

std::vector<int> majorityElements(const std::vector<int>& nums) {
    std::vector<int> result;

    if (nums.empty()) {
        return result;
    }

    int candidate1 = nums[0], count1 = 1;
    int candidate2 = nums[0], count2 = 0;

    // Boyer-Moore Majority Vote algorithm
    for (int i = 1; i < nums.size(); ++i) {
        if (nums[i] == candidate1) {
            count1++;
        } else if (nums[i] == candidate2) {
            count2++;
        } else if (count1 == 0) {
            candidate1 = nums[i];
            count1 = 1;
        } else if (count2 == 0) {
            candidate2 = nums[i];
            count2 = 1;
        } else {
            count1--;
            count2--;
        }
    }

    // Verify candidates to ensure they appear more than ⌊ n/3 ⌋ times
    count1 = 0;
    count2 = 0;

    for (int num : nums) {
        if (num == candidate1) {
            count1++;
        } else if (num == candidate2) {
            count2++;
        }
    }

    if (count1 > nums.size() / 3) {
        result.push_back(candidate1);
    }
    if (count2 > nums.size() / 3 && candidate1 != candidate2) {
        result.push_back(candidate2);
    }

    return result;
}

int main() {
    int n;
    std::cout << "Enter the size of the array: ";
    std::cin >> n;

    std::vector<int> nums(n);
    std::cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; ++i) {
        std::cin >> nums[i];
    }

    std::vector<int> result = majorityElements(nums);

    std::cout << "Elements appearing more than ⌊ n/3 ⌋ times: ";
    for (int num : result) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    return 0;
}
